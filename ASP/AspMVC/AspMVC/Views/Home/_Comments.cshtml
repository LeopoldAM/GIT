@model AspMVC.Models.Commentaire

@{
    ViewBag.Title = "Comments";
}

<h2>Ajouter un commentaire</h2>


@*ajout de l'action pour spécifier que c'est l'action de commentaire avec nom du controller et pas l'action de details*@
@using (Ajax.BeginForm("AjouterCom", new AjaxOptions { UpdateTargetId = "NomZone" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Commentaire</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*@Html.HiddenFor(model => model.Id)*@@* utliser pour l'édition ou modification *@
    @Html.HiddenFor(model => model.ArticleId) @*utiliser pour création*@

    
    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
